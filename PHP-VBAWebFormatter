$strArgs = "
Global Const debugMode As Boolean = False '//Debug switch

myString = \"Hello i am a string\"

'// FileType Enum
Public Enum ezFileType
    ezXLS = -4143
    ezCSV = 6
    ezXLA = 18
    ezXLSX = 51
    ezXLSM = 52
End Enum

'// Msgbox Enums
    '// Button Style
Public Enum ezMsgButtons
    ezOK = 0
    ezOKCancel = 1
    ezAbortRetryIgnore = 2
    ezYesNoCancel = 3
    ezYesNo = 4
    ezRetryCancel = 5
End Enum

    '// Icon Style
Public Enum ezMsgIcons
    ezCritical = 16
    ezQuestion = 32
    ezExclamation = 48
    ezInformation = 64
End Enum

    '// Default Button
Public Enum ezMsgDefaultButton
    ezButton1 = 0
    ezButton2 = 256
    ezButton3 = 512
End Enum

    '// Misc Settings
Public Enum ezMsgModalState
    ezPauseApplication = 0
    ezPauseAllApplications = 4096
    ezForceToForeground = 65536
    ezRightAlignText = 524288
    ezRightToLeftReading = 1048576
End Enum
";



$strArr = explode("\n", $strArgs);

// keywords array:
$keywords = Array("Alias", "And", "As", "Boolean", "ByRef", "ByVal", "Call", "Case", "CBool", "CDate", "CDbl", "CInt",
	"Class", "CLng", "CObj", "Const", "CStr", "Date", "Debug", "Declare", "Dim", "Do", "Double", "Each", "Else",
	"ElseIf", "End", "EndIf", "Enum", "Erase", "Error", "Exit", "False", "For", "Friend", "Function", "Get", "Global",
	"GoTo", "If", "Implements", "In", "Inherits", "Integer", "Interface", "Is", "Let", "Lib", "Like", "Long",
	"Loop", "Me", "Mod", "Module", "New", "Next", "Not", "Nothing", "Object", "Of", "On", "Option", "Optional",
	"Or", "OrElse", "Print", "Private", "Property", "Protected", "Public", "ReadOnly", "ReDim", "Resume", "Return",
	"Select", "Set", "Shared", "Static", "Step", "Stop", "String", "Sub", "Then", "To", "True", "TypeOf", "Variant",
	"Wend", "When", "While", "With", "WriteOnly");

$theme = array(
    "Line_BG" => "#0C0C0C",
    "Line_Text" => "#8A8A8A",
	"BG" => "#3F3F3F",
    "Text" => "#DCDCCC",
	"Keyword" => "#CEDF99",
    "Comment" => "#7F9F7F",
);



//Store Line count var
$lineCount = 0;


foreach($strArr as $line){

	$i++;
	
	preg_match_all("'\'.*'", $line, $matches);
	
	$newLine = str_replace($matches[0][0], "<span style=\"color: " . $theme{Comment} .";\">".$matches[0][0]."</span>",$line);

		If (strpos($newLine, '\'') <> FALSE) {
			preg_match_all("'.*\''", $newLine, $matches);
			$tmpComment = str_replace($matches[0][0], "",$newLine);
			$newLine = $matches[0][0];
		}
	
		foreach($keywords as $word){
			$newLine = preg_replace("/(?<!\w)$word(?!\w)/","<span style=\"color: " . $theme{Keyword} ."; font-weight: bold;\">".$word."</span>", $newLine);
		}

		If (strpos($newLine, '\'') <> FALSE) {
			$newLine = $newLine . $tmpComment;
		}
	
	$strpad = (strlen($newLine) - strlen(ltrim($newLine))); // no of characters to pad by
	$pad_string = "&nbsp;";
	
	// remove formatting from quoted text
	preg_match_all('/"(?!color:)(?=[^>])(.*?)"(?=[^>]*(<|$))/', $newLine, $matchesQ);
		foreach($matchesQ[0] as $match){
			$newLine = str_replace($match, strip_tags($match), $newLine);
			}
			
	$HTMLtext = str_pad(trim($newLine), strlen(trim($newLine))+($strpad*strlen($pad_string)), $pad_string, STR_PAD_LEFT);
	$lineCount = "<span style=\"background-color: ". $theme{Line_BG}. ";color: " . $theme{Line_Text} .";\">".str_pad($i, (strlen($i)+(strlen($pad_string)*(strlen($lineCountLen)-strlen($i)))), $pad_string, STR_PAD_LEFT).":</span> ";
	
	$outputText = $outputText . "<br />" . $HTMLtext;
	$countOutputText = $countOutputText."<br />".$lineCount.$HTMLtext;
	$newLine = "";

}


echo "<span style=\"background-color: " . $theme{BG} . ";color: " . $theme{Text} .";\">" . $countOutputText . "</span>";
