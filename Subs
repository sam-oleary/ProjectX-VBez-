'// SaveAs with folder picker

Public Sub PickFolderSaveAs(WB As Workbook, FileName As String, _
    FileType As ezFileType, Optional Password As String)
    
    MsgBox "Choose a folder to save your workbook in.", vbInformation, "VBez"
    
    filePath$ = BrowseFolder("Save Workbook In...", Environ("HOMEPATH"), msoFileDialogViewThumbnail)
    
    WB.SaveAs filePath & "\" & FileName, FileType, Password
    
End Sub

'// Ultimate Blank Rows Deletion

Public Sub deleteBlankRowsInColumn(columnLetter As String, _
    Optional headerRow As Boolean = True, Optional sheetName As String)

Dim rNum As Integer

If headerRow Then: rNum = 2: Else: rNum = 1
    If sheetName = vbNullString Then sheetName = ActiveSheet.Name
   
On Error GoTo checkCells:

If CInt(Application.Version) < 14 Then
    With Sheets(sheetName).Columns(columnLetter)
        If .SpecialCells(4).Areas(1).Cells.Count = .Cells.Count Then
            MsgBox "This version of Excel cannot handle more than 8192 areas of special cells.", _
                vbOKOnly + vbCritical, "Error"
            Exit Sub
        End If
    End With
Else
    With Sheets(sheetName)
        .Range(columnLetter & rNum, .Range(columnLetter & _
        .Rows.Count).End(xlUp)).SpecialCells(xlCellTypeBlanks).EntireRow.Delete _
         shift:=xlUp
    End With
End If

      
Exit Sub

checkCells:
If Err.Number = 1004 Then
    Exit Sub
Else
    MsgBox "There was an error with the ""deleteBlankRowsInColumn()"" function:" & _
    vbCrLf & _
    vbCrLf & _
    "Error number: " & Err.Number & _
    vbCrLf & _
    vbCrLf & _
    Err.Description, vbOKOnly & vbExclamation, "Unexpected Error"
    
    Err.Clear
End If

End Sub
